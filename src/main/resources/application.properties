
server.port=8081
server.servlet.context-path=/api

# App Properties
lunna.app.jwtSecret= L8nn4Zecr3t_Key
lunna.app.jwtExpirationMs= 86400000


#security.basic.enable: false
#security.ignored=/**



# ===============================
# DATABASE
# ===============================
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/insights
spring.datasource.username=postgres
spring.datasource.password=Prestige@123$%
# ===============================
# JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=true

#create-drop| update | validate | none
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect


spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#Note: The last two properties on the code snippet above were added to suppress an annoying exception
# that occurs when JPA (Hibernate) tries to verify PostgreSQL CLOB feature.
# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.allow_update_outside_transaction=true.



